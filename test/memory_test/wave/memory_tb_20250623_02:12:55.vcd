$date
	Mon Jun 23 02:20:17 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module memory_tb $end
$var wire 1 ! read_valid $end
$var wire 16 " data_out_b [15:0] $end
$var wire 16 # data_out_a [15:0] $end
$var reg 2 $ addr_a [1:0] $end
$var reg 2 % addr_b [1:0] $end
$var reg 2 & addr_w [1:0] $end
$var reg 1 ' clk $end
$var reg 16 ( data_in [15:0] $end
$var reg 1 ) en $end
$var reg 1 * rst $end
$var reg 1 + write_en $end
$scope module dut $end
$var wire 2 , addr_a [1:0] $end
$var wire 2 - addr_b [1:0] $end
$var wire 2 . addr_w [1:0] $end
$var wire 1 ' clk $end
$var wire 16 / data_in [15:0] $end
$var wire 16 0 data_out_a [15:0] $end
$var wire 16 1 data_out_b [15:0] $end
$var wire 1 ) en $end
$var wire 1 ! read_valid $end
$var wire 1 * rst $end
$var wire 1 + write_en $end
$var reg 16 2 reg_a [15:0] $end
$var reg 16 3 reg_b [15:0] $end
$var reg 1 4 valid $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
x4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
x+
x*
x)
bx (
x'
bx &
bx %
bx $
bx #
bx "
x!
$end
#1000
