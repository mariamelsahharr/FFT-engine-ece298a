$date
	Mon Jun 23 02:07:12 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module butterfly_tb $end
$var wire 1 ! valid $end
$var wire 8 " plus [7:0] $end
$var wire 8 # minus [7:0] $end
$var wire 8 $ Pos [7:0] $end
$var wire 8 % Neg [7:0] $end
$var reg 8 & A [7:0] $end
$var reg 8 ' B [7:0] $end
$var reg 8 ( T [7:0] $end
$var reg 1 ) clk $end
$var reg 1 * en $end
$var reg 1 + rst $end
$scope module dut $end
$var wire 8 , A [7:0] $end
$var wire 8 - B [7:0] $end
$var wire 8 . T [7:0] $end
$var wire 1 ) clk $end
$var wire 1 * en $end
$var wire 1 + rst $end
$var wire 4 / t_real [3:0] $end
$var wire 4 0 t_imag [3:0] $end
$var wire 4 1 product_real_trunc [3:0] $end
$var wire 8 2 product_real [7:0] $end
$var wire 4 3 product_imag_trunc [3:0] $end
$var wire 8 4 product_imag [7:0] $end
$var wire 8 5 pos_comb [7:0] $end
$var wire 8 6 neg_comb [7:0] $end
$var wire 4 7 b_real [3:0] $end
$var wire 4 8 b_imag [3:0] $end
$var wire 4 9 a_real [3:0] $end
$var wire 4 : a_imag [3:0] $end
$var parameter 32 ; HALF_WIDTH $end
$var parameter 32 < WIDTH $end
$var reg 8 = Neg [7:0] $end
$var reg 8 > Pos [7:0] $end
$var reg 1 ! valid $end
$upscope $end
$scope module golden_model $end
$var wire 8 ? A [7:0] $end
$var wire 8 @ B [7:0] $end
$var wire 8 A W [7:0] $end
$var wire 4 B w_real [3:0] $end
$var wire 4 C w_imag [3:0] $end
$var wire 4 D product_real_trunc [3:0] $end
$var wire 8 E product_real [7:0] $end
$var wire 4 F product_imag_trunc [3:0] $end
$var wire 8 G product_imag [7:0] $end
$var wire 8 H plus [7:0] $end
$var wire 8 I minus [7:0] $end
$var wire 4 J b_real [3:0] $end
$var wire 4 K b_imag [3:0] $end
$var parameter 32 L WIDTH $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 L
b1000 <
b100 ;
$end
#0
$dumpvars
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
x+
x*
x)
bx (
bx '
bx &
bx %
bx $
bx #
bx "
x!
$end
#1000
